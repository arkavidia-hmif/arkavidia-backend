name: Build and Deploy
on:
  push:
    branches:
      - develop
jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.6]
    steps:
    - uses: actions/checkout@v1
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pipenv
        pipenv install --dev
    - name: Lint with flake8
      run: |
        pipenv run flake8 . --count --max-line-length=120 --statistics
    - name: Lint with pep8
      run: |
        pipenv run pycodestyle . --count --max-line-length=120 --statistics
    - name: Test django
      run: |
        pipenv run python manage.py test -v 3
  build:
    runs-on: ubuntu-latest
    needs: test
    steps:
    - uses: actions/checkout@master
      with:
        ref: develop
    - name: Publish to Registry
      uses: elgohr/Publish-Docker-Github-Action@master
      with:
        name: arkavidia-hmif/arkavidia-backend/builds
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
        registry: docker.pkg.github.com
  deploy-staging:
    runs-on: ubuntu-latest
    needs: build
    steps:
    - name: Run deployment script over SSH
      uses: maddox/actions/ssh@master
      env:
        PRIVATE_KEY: ${{ secrets.PRIVATE_KEY }}
        HOST: ${{ secrets.HOST }}
        USER: ${{ secrets.USER }}
      with:
        args: "cd /root/ && docker-compose up -d"
